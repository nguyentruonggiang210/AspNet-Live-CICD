name: Continous Integration and Deployment # name of process

on: # when process run
  push:
    branches:
      - main

env:
  DOTNET_VERSION: "5.0.x"
  AZURE_WEBAPP_NAME: giangappservice

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code # just a name
        uses: actions/checkout@v3 # get from marketplace

      - name: Setup .NET 5
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore packages
        run: dotnet restore

      - name: Build .NET application
        run: dotnet build -c Release --no-restore

      - name: Run Unit Test
        run: dotnet test -c Release --no-build

      - name: Publish app
        run: dotnet publish -c Release -o ./out # publish to ./out folder

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
        
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"nguyentruonggiang210_AspNet-Live-CICD" /o:"nguyentruonggiang210" /d:sonar.login="${{ secrets.SONARQUBE_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONARQUBE_TOKEN }}"

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }} # web app name created in Azure Portal
          publish-profile: ${{ secrets.AZURE_WEB_APP_PUBLISH_SECRECT }} # secrets. name of secrets created in github
          package: ./out # read published files int ./out
